[
  
      {
        "title"    : "Média WFS type GeoJson",
        "category" : "Publier des jeux de données géographiques",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/Jeux_de_donnees_geo/geojson_wfs/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publier un jeu de données ayant un média WFS type GeoJson\n",
        "content"  : "Publier un jeu de données ayant un média WFS type GeoJson\n\nVous trouverez ci-dessous la section available format à ajouter à votre json de publication.\n\nPoint Infos : Pour récupérer un json d’un jeu de données présent sur rudi.bzh vous pouvez le requêter en effectuant un GET sur l’url d’un média présent dans la page de détail du jeu de données (section : “Source de données”).\n\n  La requête : curl -v -X GET “https://rudi.rennesmetropole.fr/medias/fd6be827-a10f-46d0-9c58-e143d26f7e55/dwnl/1.0.0”.\n\n\nLa section de code à ajouter au JSON :\n\n    \"available_formats\": [\n        {\n            \"media_type\": \"FILE\", //Correspond au type de media, ici il s'agit d'un fichier (ne pas changer)\n            \"media_id\": \"\", //Correspond à l'uuid du media\n            \"file_type\": \"application/geo+json\", //Correspond au type de média (ne pas changer)\n            \"file_size\": 4096, //Correspond à la taille du média\n            \"file_encoding\": \"UTF-8\", //Correspond à l'encodage du média\n            \"checksum\": {\n                \"algo\": \"MD5\",\n                \"hash\": \"bc4711a0-6c95-4f0f-b84d-534186ae8a89\" //Correspond à l'algorithme de hachage\n            },\n            \"connector\": {\n                \"interface_contract\": \"dwnl\", //Correspond à l'interface contract (ne pas changer)\n                \"url\": \"https://public.sig.rennesmetropole.fr/geoserver/ptou_lois/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typeName=ptou_lois%3Acircuit_pedestre&amp;maxFeatures=200&amp;outputFormat=application%2Fjson\", //Correspond à l'url du média (elle doit être structurée de la même façon)\n                \"connector_parameters\": [\n                    {\n                        \"key\": \"layer\", //Correspond à la clé \"layer\" (ne pas changer)\n                        \"value\": \"ptou_lois:circuit_pedestre\",  //Correspond à la couche que vous souhaitez importer\n                        \"type\": \"STRING\", //Correspond au type (ne pas changer)\n                        \"usage\": \"Nom du layer à récupérer\", //Correspond à l'usage de la clé layer\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"layer\" //Correspond à la clé \"Layer\"\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"versions\", //Correspond à la clé \"Versions\"\n                        \"value\": \"1.0.0\", //Correspond à la version présente dans l'url que vous avez renseigné\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"versions\" //Correspond à la clé \"Versions\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"default_crs\", //Correspond à la clé \"default_crs\" (ne pas changer)\n                        \"value\": \"EPSG:3948\", //Correspond à la projection \n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"default_crs\" //Correspond à la clé \"default_crs\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"formats\", //Correspond à la clé \"formats\" (ne pas changer)\n                        \"value\": \"application/json\", //Correspond au format (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"formats\" //Correspond à la clé \"formats\" (ne pas changer)\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ],\n\n\n\n"
      },
      {
        "title"    : "Média WFS",
        "category" : "Publier des jeux de données géographiques",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/Jeux_de_donnees_geo/wfs/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publier un jeu de données ayant un média de type WFS\n",
        "content"  : "Publier un jeu de données ayant un média de type WFS\n\nVous trouverez ci-dessous la section available format à ajouter à votre json de publication.\n\nPoint Infos : Pour récupérer un json d’un jeu de données présent sur rudi.bzh vous pouvez le requêter en effectuant un GET sur l’url d’un média présent dans la page de détail du jeu de données (section : “Source de données”).\n\n  La requête : curl -v -X GET “https://rudi.rennesmetropole.fr/medias/fd6be827-a10f-46d0-9c58-e143d26f7e55/dwnl/1.0.0”.\n\n\nLa section de code à ajouter au JSON :\n\n\"available_formats\": [\n        {\n            \"media_type\": \"SERVICE\", //Correspond au type de media, ici il s'agit d'un service (ne pas changer)\n            \"media_id\": \"\", //Correspond à l'uuid du media\n            \"connector\": {\n                \"interface_contract\": \"wfs\", //Correspond au type de service (ne pas changer)\n                \"url\": \"https://public.sig.rennesmetropole.fr/geoserver/eq_cultspo/ows\", // Correspond au début d'une url récupérée sur un geoserver, ici nous nous arrêterons à \"ows\"\n                \"connector_parameters\": [\n                    {\n                        \"key\": \"layer\", //Correspond à la clé utilisée (ne pas changer)\n                        \"value\": \"eq_cultspo:v_sport_proximite\", // Correspond à la layer à afficher\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer) \n                        \"usage\": \"Nom du layer à récupérer\", //Correspond à l'usage de la clé (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"layer\" //Correspond à la clé utilisée (ne pas changer)\n                            }\n                        ]\n                    },\n                                        {\n                        \"key\": \"versions\",//Correspond à la clé \"Versions\" (ne pas changer)\n                        \"value\": \"1.0.0\", //Correspond à la version (cette information est à récupérer au sein de l'url affichée dans votre onglet geoserver)\n                        \"type\": \"STRING\",\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"versions\" //Correspond à la clé \"Versions\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"default_crs\",//Correspond à la clé \"default_crs\" (ne pas changer)\n                        \"value\": \"EPSG:3857\",//Correspond au système de projection\n                        \"type\": \"STRING\",\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"default_crs\"//Correspond à la clé utilisée (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"formats\", //Correspond à la clé \"formats\" (ne pas changer)\n                        \"value\": \"application/json\", //Correspond au format (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format  (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"formats\"//Correspond à la clé \"formats\"  (ne pas changer)\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ],\n\n\n"
      },
      {
        "title"    : "Média WMS",
        "category" : "Publier des jeux de données géographiques",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/Jeux_de_donnees_geo/wms/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publier un jeu de données ayant un média de type WMS\n",
        "content"  : "Publier un jeu de données ayant un média de type WMS\n\nVous trouverez ci-dessous la section available format à ajouter à votre json de publication.\n\nPoint Infos : Pour récupérer un json d’un jeu de données présent sur rudi.bzh vous pouvez le requêter en effectuant un GET sur l’url d’un média présent dans la page de détail du jeu de données (section : “Source de données”).\n\n  La requête : curl -v -X GET “https://rudi.rennesmetropole.fr/medias/fd6be827-a10f-46d0-9c58-e143d26f7e55/dwnl/1.0.0”.\n\n\nLa section de code à ajouter au JSON :\n\n\"available_formats\": [\n        {\n            \"media_type\": \"SERVICE\", //Correspond au type de media, ici il s'agit d'un service (ne pas changer)\n            \"media_id\": \"\",//Correspond à l'uuid du media\n            \"connector\": {\n                \"interface_contract\": \"wms\", //Correspond au type de service (ne pas changer)\n                \"url\": \"https://public.sig.rennesmetropole.fr/geoserver/pnat_hab/wms\",// Corresopnd au début d'une url récupérée sur un geoserver, ici nous nous arrêterons à \"wms\"\n                \"connector_parameters\": [\n                    {\n                        \"key\": \"layer\", //Correspond à la clé \"layer\" (ne pas changer)\n                        \"value\": \"pnat_hab:delaisse_urbain\", // Correspond à la layer à afficher et renseignée dans url\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"usage\": \"Nom du layer à récupérer\",//Correspond à l'usage de la clé \"layer\"  (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"layer\" //Correspond à la clé \"layer\" (ne pas changer)\n                            }\n                        ]\n                    },                    {\n                        \"key\": \"versions\", //Correspond à la clé \"Versions\" (ne pas changer)\n                        \"value\": \"1.1.0\",//Correspond à la version (cette information est à récupérer au sein de l'url affichée dans votre onglet geoserver)\n                        \"type\": \"STRING\", //Correspond au format  (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"versions\"  //Correspond à la clé \"Versions\" (ne pas la changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"default_crs\", //Correspond à la clé \"Default_crs\" (ne pas changer)\n                        \"value\": \"EPSG:2154\", //Correspond au système de projection\n                        \"type\": \"STRING\", // Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"default_crs\" //Correspond à la clé utilisée \"Default_crs\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"formats\", //Correspond à la clé \"Formats\" (ne pas changer)\n                        \"value\": \"image/png\", //Correspond au format du média (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"formats\" //Correspond à la clé \"format\" (ne pas changer) \n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ],\n\n"
      },
      {
        "title"    : "Média WMTS",
        "category" : "Publier des jeux de données géographiques",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/Jeux_de_donnees_geo/wmts/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publier un jeu de données ayant un média de type WMTS\n",
        "content"  : "Publier un jeu de données ayant un média de type WMTS\n\nVous trouverez ci-dessous la section available format à ajouter à votre json de publication.\n\nPoint Infos : Pour récupérer un json d’un jeu de données présent sur rudi.bzh vous pouvez le requêter en effectuant un GET sur l’url d’un média présent dans la page de détail du jeu de données (section : “Source de données”).\n\n  La requête : curl -v -X GET “https://rudi.rennesmetropole.fr/medias/fd6be827-a10f-46d0-9c58-e143d26f7e55/dwnl/1.0.0”.\n\n\nLa section de code à ajouter au JSON (particularité : Seule la projection 3857 permet une visualisation au sein du portail.):\n\n\n    \"available_formats\": [\n        {\n            \"media_type\": \"SERVICE\", //Correspond au type de media, ici il s'agit d'un service (ne pas changer) \n            \"media_id\": \"\", //Correspond à l'uuid du media\n            \"connector\": {\n                \"interface_contract\": \"wmts\", //Correspond au type de service (ne pas changer)\n                \"url\": \"https://public.sig.rennesmetropole.fr/geowebcache/service/wmts\", // Correspond au début d'une url récupérée sur un geoserver, ici nous nous arrêterons à \"wmts\"\n                \"connector_parameters\": [\n                    {\n                        \"key\": \"layer\", //Correspond à la clé \"layer\" (ne pas changer)\n                        \"value\": \"ref_fonds:top25\", // Correspond à la layer à afficher\n                        \"type\": \"STRING\", // Correspond au format (ne pas changer)\n                        \"usage\": \"Nom du layer à récupérer\", //Correspond à l'usage de la clé \"layer\" (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"layer\" //Correspond à la clé \"Layer\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"default_crs\", //Correspond à la clé \"Default_crs\" (ne pas changer)\n                        \"value\": \"EPSG:3857\", //Correspond à la projection (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"default_crs\" //Correspond à la clé \"Default_crs\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"versions\",//Correspond à la clé \"Versions\" (ne pas changer)\n                        \"value\": \"1.3.0\", //Correspond à la version (cette information est à récupérer au sein de l'url affichée dans votre onglet geoserver)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"versions\"  //Correspond à la clé \"Versions\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"matrix_set\", //Correspond à la clé \"Matrix_set\" (ne pas changer)\n                        \"value\": \"EPSG:3857\", //Correspond à la projection (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"usage\": \"Nom du matrix set conjoint à la projection\",//Correspond à l'usage de la clé \"matrix_set\" (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"matrix_set\"//Correspond à la clé utilisée (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"matrix_id_prefix\", //Correspond à la clé \"Matrix_id_prefixe\" (ne pas changer)\n                        \"value\": \"EPSG:3857\", //Correspond à la projection (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"usage\": \"Nom du préfixe au matrix set conjoint au matrix set\", //Correspond à l'usage de la clé \"matrix_id_prefix\" (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"matrix_id_prefix\" //Correspond à la clé \"matrix_id_prefix\" (ne pas changer)\n                            }\n                        ]\n                    },\n                    {\n                        \"key\": \"formats\", //Correspond à la clé \"Formats\" (ne pas changer)\n                        \"value\": \"image/png\", //Correspond au format (ne pas changer)\n                        \"type\": \"STRING\", //Correspond au format (ne pas changer)\n                        \"usage\": \"Format des images pour l'affichage\", //Correspond à l'usage de la clé \"format\" (ne pas changer)\n                        \"accepted_values\": [\n                            {\n                                \"cle\": \"format\" //Correspond à la clé \"Format\"\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n    ],\n\n\n"
      },
      {
        "title"    : "Requêter un média de type API",
        "category" : "Accéder à des données ouvertes",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnee_ouverte/acces_donnee_ouverte_media_type_API/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Requêter un média de type API d’un jeu de données ouvert\n",
        "content"  : "Requêter un média de type API d’un jeu de données ouvert\n\nIl est possible de requêter un jeu de données ouvert dont le média est de type “API”.\nIl suffit de faire un POST sur l’url d’un média du jeu de données ouvert de type API afin de récupérer le token de l’utilisateur Anonymous. Vous trouverez ci-dessous un exemple de requête :\ncurl -kv -X POST -H \"Authorization: Basic NGZsNllNOXVVSFRScXNUTGNZSjN3cUVPNUI0YTpqN0ttV2hPYk1BakZwSFlESjdMQUx6cGQyMmNh\" -d \"grant_type=client_credentials&amp;username=anonymous&amp;scope=apim:subscribe apim:app_manage\" -H \"Content-Type:application/x-www-form-urlencoded\"  \"https://rudi.bzh/apm/token\"\n\nVous récupérerez un token qu’il faudra intégrer dans une nouvelle requête GET. L’identifiant d’un média est aussi à ajouter, celui-ci est consultable depuis le portail, dans le détail d’un jeu de données / Informations complémentaires / Sources de données (un bouton vous permet de copier directement l’url) :\n\n\n\nVoici un exemple de requête vous permettant d’appeler un média de type API :\ncurl -kv -XGET -H \"Authorization: Bearer &lt;le token wso2 que vous avez récupéré ci-dessus&gt;\" \"https://rudi.bzh/apm/medias/INSERER ICI L'IDENTIFIANT DU MEDIA/dwnl/1.0.0\"\n\n"
      },
      {
        "title"    : "Requêter",
        "category" : "Accéder à des données ouvertes",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnee_ouverte/requeter/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Requêter un jeu de donnée ouvert\n",
        "content"  : "Requêter un jeu de donnée ouvert\n\nIl est possible de requêter un jeu de données ouvert sans être authentifié.\nIl suffit de faire un GET sur l’url d’un média du jeu de données. Vous trouverez ci-dessous un exemple de requête :\ncurl -v -X GET \"https://rudi.rennesmetropole.fr/medias/fd6be827-a10f-46d0-9c58-e143d26f7e55/dwnl/1.0.0\"\n\n\nL’url d’un média est consultable depuis le portail, dans le détail d’un jeu de données / Informations complémentaires / Sources de données (un bouton vous permet de copier directement l’url).\n"
      },
      {
        "title"    : "Télécharger",
        "category" : "Accéder à des données ouvertes",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnee_ouverte/telecharger/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Télécharger un jeu de donnée ouvert\n",
        "content"  : "Télécharger un jeu de donnée ouvert\n\nLes jeux de données ouverts sont téléchargeables depuis le portail Rudi, sans forcément être authentifié.\n\nPour télécharger un jeu de données, il est nécessaire d’accéder au détail du jeu de données depuis le catalogue.\nUn bouton Télécharger en haut vous permet de sélectionner le format dans lequel vous souhaitez télécharger le jeu de données.\n\n\n"
      },
      {
        "title"    : "Accéder aux données en accès restreint",
        "category" : "Accéder à des données en accès restreint",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnees_restreintes/acces_donnees/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Accéder aux données en accès restreint\n",
        "content"  : "Accéder aux données en accès restreint\n\nUne fois la demande d’accès acceptée par le producteur et la souscription réalisée, vous pouvez accéder au jeu de données de 2 manières :\n\n  soit via API,\n  soit directement dans le portail.\n\n\nTéléchargement de la donnée via API\nS’authentifier afin de récupérer un token\n\nLa première étape pour télécharger un jeu de données via API est de s’authentifier en exécutant la commande suivante :\ncurl -kv -X POST -H \"Authorization: Basic [base64(consumer_key:consumer_secret)]\" -d \"grant_type=client_credentials&amp;username=[login du user sur le portail associé au customer_key]&amp;scope=apim:subscribe apim:app_manage\" -H \"Content-Type:application/x-www-form-urlencoded\" \"https://rudi.bzh/apm/token\"\n\nCet appel permet de récupérer un token.\n\nTélécharger le jeu de données\n\nA partir du “jwtToken “il est alors possible de requêter les APIs de téléchargement par le biais d’une requête “Get”. Nous l’effectuons sur une url qui prend en paramètre l’identifiant du média du jeu de données.\n\nExemple de requête sur le média de type csv du jeu de données : Détail d’un jeu de données ouvert :\n\ncurl -v -X GET \" https://rudi.bzh/apm/medias/1cd92470-77b6-46c6-ae7b-14d10fac49d7/dwnl/1.0.0\" -H \"Authorization: Bearer [jwtToken]\"\n\n\nLes différentes informations du médias sont récupérables dans la page de détail du jeu de données au sein de la partie ‘Informations complémentaires’ puis ‘Source de données’.\n\n\n\naffichage des sources sur la page de détails d’un jeu de données\n\nTéléchargement de la donnée à partir du portail\nVous pouvez également télécharger le jeu de données depuis son détail : pour cela vous devez vous connecter, accéder au détail du jeu de donnée et cliquer sur le bouton Télécharger.\n\n\n"
      },
      {
        "title"    : "Déchiffrement des données",
        "category" : "Accéder à des données en accès restreint",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnees_restreintes/chiffrement/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Déchiffrement des données en accès restreint\n",
        "content"  : "Déchiffrement des données en accès restreint\n\nLes données en accès restreint sont stockées chiffrées sur le noeud producteur. Pour chaque média chiffré les connector_parameters suivants doivent être renseignés :\n\n\n  encrypted qui doit toujours être à true ;\n  public_key_url : l’URL de la clé publique utilisée ;\n  pub_key_cut : les premièrs caractères du contenu de la clé publique utilisée pour chiffrer (si le paramètre précédent n’est pas renseigné) ;\n  original_mime_type : le MIME type avant chiffrement du média ;\n  encrypted_mime_type : le MIME type après chiffrement du média.\n\n\nExemple de média :\n\n\t\"connector_parameters\": [\n\t\t{\n\t\t\t\"key\": \"encrypted\",\n\t\t\t\"value\": \"true\",\n\t\t\t\"type\": \"BOOLEAN\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"pub_key_cut\",\n\t\t\t\"value\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvS3nTZOj01kq1V6wKpMe\",\n\t\t\t\"type\": \"STRING\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"original_mime_type\",\n\t\t\t\"value\": \"image/jpeg\",\n\t\t\t\"type\": \"STRING\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"encrypted_mime_type\",\n\t\t\t\"value\": \"image/jpeg+crypt\",\n\t\t\t\"type\": \"STRING\"\n\t\t}\n\t]\n\n\nChiffrement à partir de la clé publique du portail\nElles peuvent être chiffrées à partir d’une clé publique exposée par le portail.\nCette clé est accessible via la requête :\ncurl -X GET \"https://rudi.bzh/konsult/v1/encryption-key\" -H  \"accept: application/octet-stream\"\n\n\nDans ce cas là, le déchiffrement des données se fait automatiquement par le portail lors d’un téléchargement. Cette étape est totalement transparente pour vous.\n\nChiffrement à partir d’une clé inconnue pour le portail\nLes données en accès restreint peuvent être chiffrées à partir d’une autre clé, qui n’est pas connue par le portail.\nDans ce cas, le portail Rudi ne peut pas déchiffrer la donnée. Les données que vous récupérez au moment du téléchargement seront alors chiffrées.\n"
      },
      {
        "title"    : "Créer un projet",
        "category" : "Accéder à des données en accès restreint",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnees_restreintes/creer_un_projet/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Créer un projet\n",
        "content"  : "Créer un projet\n\nLa création d’un projet se fait depuis le catalogue des réutilisations, en cliquant sur le bouton “Soumettre un projet”.\n\nPour créer un projet, vous devez renseigner différentes informations :\n\n  Informations décrivant le projet\n  Informations sur votre identité : vous pouvez soumettre un projet en votre nom ou au nom d’une organisation\n  Sélection des jeux de données que vous souhaitez utiliser dans le cadre de votre projet\n\n\nLa description de votre projet vous permet de choisir si votre projet sera visible depuis le catalogue par tous ou s’il est confidentiel (visible uniquement par vous, l’animateur Rudi et les producteurs de données concernés). *fonctionnalité en cours d’implémentation**\n\nLorsque votre projet est créé, celui-ci est référencé dans le catalogue des réutilisations et est consultable par tous. Vous pouvez également le consulter depuis votre compte / Mes réutilisations.\n\nLa modification d’un projet n’est pas encore possible dans Rudi.\n\n\n\n"
      },
      {
        "title"    : "Demander l&#39;accès",
        "category" : "Accéder à des données en accès restreint",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnees_restreintes/demande_acces/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Demander l’accès à des données en accès restreint\n",
        "content"  : "Demander l’accès à des données en accès restreint\n\nPour télécharger des données en accès restreint, vous devez d’abord y demander l’accès.\n\nLes demandes d’accès se font uniquement dans le cadre d’un projet. Si vous avez déjà créé votre projet dans Rudi, vous pouvez demander l’accès à un jeu de données directement depuis le détail du jeu de données, dans le catalogue. Au clic sur “Demander l’accès”, vous devez sélectionner le projet pour lequel vous demander l’accès au jeu de données.\n\nSi vous n’avez pas encore créé de projet, vous devez créer un projet à partir du catalogue des réutilisations et sélectionner le jeu de données demandés à la 3ème étape (des évolutions sont en cours pour faciliter ce parcours).\n\nPour chaque demande d’accès, vous pouvez définir la date jusqu’à laquelle vous souhaitez utiliser le jeu de données ainsi que renseigner un commentaire à destination du producteur de données.\n\nUne fois validée, la demande est transmise au producteur de données concerné. Celui-ci est notifié par e-mail de votre demande.\nLe producteur de données peut, depuis son espace personnel, consulter votre demande et la traiter.\n\nVous recevrez un mail vous indiquant la décision du producteur de données.\n\n\n"
      },
      {
        "title"    : "Souscrire à un jeu de données",
        "category" : "Accéder à des données en accès restreint",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/acces_donnees_restreintes/souscrire_jdd/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Souscrire à un jeu de données\nUne fois que vous avez reçu un mail vous indiquant que votre demande a été acceptée, vous devez paramétrer votre compte en souscrivant aux jeux de données.\nPour cela, accédez à votre espace personnel, Mes réutilisations, onglet Mes réutilisations. Toutes vos réutilisations et projet sont visibles. En cliquant sur une ligne, vous pouvez accéder à son détail.\n",
        "content"  : "Souscrire à un jeu de données\nUne fois que vous avez reçu un mail vous indiquant que votre demande a été acceptée, vous devez paramétrer votre compte en souscrivant aux jeux de données.\nPour cela, accédez à votre espace personnel, Mes réutilisations, onglet Mes réutilisations. Toutes vos réutilisations et projet sont visibles. En cliquant sur une ligne, vous pouvez accéder à son détail.\n\nSouscription\n\nDepuis le détail de votre projet, l’onglet “Jeux de données”, vous devez souscrire aux jeux de données afin de paramétrer votre compte.\nPour cela :\n\n  Cliquez sur le bouton “Souscrire”\n  Sélectionnez les jeux de données auxquels vous souhaitez souscire\n  Validez votre sélection : un message d’information vous indique si la souscription s’est bien passé.\n\n\nUne fois cette étape réalisée, vous pouvez fermer cette fenêtre et accéder aux jeux de données.\nL’accès aux jeux de données restreint n’est actuellement possible qu’en les requêtant (des évolutions sont en cours afin que le téléchargement soit possible directement depuis le portail).\n\nConsultation des informations d’authentification\n\nDans l’onglet API, vous pouvez consulter votre Consumer Key et Consumer Secret, identifiants à utiliser pour vous authentifier et requêter les jeux de données en votre nom.\n"
      },
      {
        "title"    : "API exposées",
        "category" : "API",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/api/api_exposees/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Le portail Rudi expose des microservices pour sa propre utilisation mais ils peuvent également être utilisés par tous en s’authentifiant ou non.\n",
        "content"  : "Le portail Rudi expose des microservices pour sa propre utilisation mais ils peuvent également être utilisés par tous en s’authentifiant ou non.\n\nMicroservices exposés par le portail Rudi\n\nLes microservices exposés sont listés ci-dessous. Leur documentation est accessible via les hyperliens.\n\n\n  acl : microservice permettant d’administrer les utilisateurs\n  konsult : microservice permettant d’administrer les jeux de données du catalogue Rudi\n  projekt : microservice permettant d’administrer les projets dans Rudi\n  kos : microservice permettant d’administrer les mots-clés et thèmes au format SKOS\n  kalim : microservice permettant de publier/modifier/supprimer un jeu de données dans le portail\n  strukture : microservice permettant d’administrer les producteurs de données\n\n\nAPI de catalogage des jeux de données\nLe microservice konsult expose une API de catalogage des jeux de données Rudi : API catalogage.\n\nPour l’utiliser, il est nécessaire de s’authentifier au près du portail en tant qu’anonymous ou avec votre compte utilisateur et de récupérer un access token  Rudi :\n\ncurl -v -X POST \"https://rudi.rennesmetropole.fr/authenticate\" --header \"Content-Type: application/x-www-form-urlencoded\" --data-urlencode \"login=anonymous\" --data-urlencode \"password=anonymous\"\n\n\nA partir du token il est alors possible de requêter l’API de catalogage comme suit :\n\ncurl -v -X GET  \"https://rudi.rennesmetropole.fr/konsult/v1/datasets/metadatas\" -H \"Authorization: Bearer [l'access token retourné par l'appel précédent]\"\n\n\nAPI pour récupérer la clé publique de chiffrement\nLe micoservice konsult expose une API permettant de récupérer la clé publique pour chiffrer les données : API clé publique.\n\nLa clé publique est récupérable de la manière suivante :\ncurl -X GET \"https://rudi.bzh/konsult/v1/encryption-key\" -H  \"accept: application/octet-stream\"\n\n"
      },
      {
        "title"    : "Authentification",
        "category" : "API",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/api/authentification/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Authentification des fournisseurs de données\n",
        "content"  : "Authentification des fournisseurs de données\n\nLes fournisseurs de données pour publier des métadonnées doivent s’authentifier en OAuth2.\n\nPour cela, il faut :\n\n  Déclarer le fournisseur dans RUDI Portail (µPoviders)\n  Déclarer chaque noeud du fournisseur dans RUDI Portail (µPoviders)\n  \n    A chaque noeud est associé un utilisateur de type ROBOT  (µACL). L’utilisateur possède :\n\n    \n      un client_id sous la forme d’un UUID V4\n      un client_secret\n    \n  \n\n\nLe noeud fournisseur peut alors s’authentifier comme suit :\n\ncurl -v --request POST https://rudi.rennesmetropole.fr/oauth/token --data \"grant_type=password\" --data \"username=username&gt;\" --data \"password=password&gt;\" --data \"scope=liste des scopes séparés par des virgules&gt;\" --data \"client_id=client_id&gt;\" -H \"Authorization:Basic encodage en base 64 de la chaine client_id:client_password&gt;\"\n\n\nContrôle de l’authentification appel du Portail RUDI vers un fournisseur de données\n\nLorsque le portail vient moissonner des données d’un fournisseur de données ou lorsque le portail vient soumettre un rapport d’intégration, l’appel comporte une entête d’authorization de type “Bearer”.\n\nExemple :\nAuthorization: Bearer Votre bearer\n\n\nLe fournisseur de données peut valider ce token en réalisant l’appel suivant vers le portail :\n\ncurl -v --request GET https://rudi.rennesmetropole.fr/oauth/check_token?token=valeur du token&gt;\n\n\nAuthentification des porteurs de projets\n\nLorsqu’un porteur de projet souhaite utiliser un jeu de données exposé par le portail, il peut le faire\n\n  soit en tant qu’utilisateur anonyme. Cette possibilité est proposée afin de permettre à un utilisateur de réaliser des essais rapidement\n  soit en son nom. C’est le cas de tous les jeux de données à accès restreint et c’est aussi le cas si le porteur de projet souhaite une qualité de service particulière. Il est important de noter que pour effectuer ce mode d’authentification, il est nécessaire de soumettre un projet dans Rudi puis de souscrire aux différents jeux de données (pas encore disponible)\n\n\nDans le cas d’une utilisation en tant qu’utilisateur anonyme, il faut :\n\n\n  Les APIs de téléchargement sont requêtables comme suit :\n\n\nAppel de l’API de téléchargement pour le media souscrit :\ncurl -v -X GET  \"https://rudi.rennesmetropole.fr/medias/uuid_du_média/dwnl/1.0.0\" \n\n\nL’url de téléchargement d’un média d’un jeu de données est consultable depuis le détail du jeu de données, dans la partie Informations complémentaires / Sources de données.\n\nSi l’URL commence par /apm/medias/ au lieu de /medias/, il est nécessaire de s’authentifier, en ajoutant un token à la requête (cf. paragraphes suivants).\n\nPour un accès en son nom propre, il faut :\n\n\n  Se connecter sur le portail avec son compte utilisateur\n  Créer un projet en y ajoutant les jdd auxquels on souhaite accéder\n  Accéder au détail du projet depuis son espace personnel\n  Souscrire aux jeux de données\n  Récupérer le couple “customer_key”/customer_secret”\n  Utiliser ce couple pour s’authentifier :\n\n\ncurl -kv -X POST -H \"Authorization: Basic [base64(customer_key:customer_secret)]\" -d \"grant_type=client_credentials&amp;username=[login du user sur le portail associé au customer_key]&amp;scope=apim:subscribe apim:app_manage\" -H \"Content-Type:application/x-www-form-urlencoded\" \"https://rudi.rennesmetropole.fr/apm/token\"\n\n\nCet appel permet de récupérer un token.\n\n\n  à partir du token il est alors possible de requêter les APIs de téléchargement comme suit :\n\n\ncurl -kv -X GET -H \"Authorization: Bearer [token]\" \"https://rudi.rennesmetropole.fr/apm/medias/[uuid_du_média]/dwnl/1.0.0\"\n\n\nPour un accès en mode anonyme, il faut :\n\nUtiliser les mêmes requêtes que dans le paragraphe précédent “Pour un accès en son nom propre”, via le compte anonyme avec les informations suivantes :\n\n\n  login : anonymous\n  customer_key : 4fl6YM9uUHTRqsTLcYJ3wqEO5B4a\n  customer_secret : j7KmWhObMAjFpHYDJ7LALzpd22ca\n\n"
      },
      {
        "title"    : "Contrat portail nœud producteur",
        "category" : "API",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/api/contrat-portail-noeud-producteur/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Note Technique de spécification d'interface\n",
        "content"  : "Note Technique de spécification d'interface\n\n#\n1. Contexte\n\nL'objet du présent document est de définir le contrat d'interface en termes d'API REST entre le portail RUDI et un nœud producteur RUDI.\n\nLe portail RUDI étant décomposé en micro-services, la communication entre un nœud producteur et le portail RUDI se fait au travers du micro-services « µKollect ».\n\n#\n2. Collecte des métadonnées\n\nLa collecte des métadonnées est réalisée par le module « Mise à jour catalogue ».\n\nLe module fonctionne selon 2 modes :\n\n\n  Mode « notification » (ou push depuis le nœud producteur)\n  Mode « moissonnage » (ou pull depuis le portail)\n\n\n1.1. Collecte en mode « Notification »\n\nEn mode « notification », le diagramme de séquence d'appel est le suivant :\n\n\n\nFigure 1 - Diagramme de séquence \"notification\"\n\nComme l'indique le schéma ci-dessus, le nœud producteur peut appeler le module de collecte (µKollect) du portail RUDI afin de déposer une demande de collecte. Cette demande comporte :\n\n\n  L'identifiant unique du jeu de données\n  La nature de la modification : création, modification des métadonnées ou suppression d'un jeu de données.\n  Les métadonnées du jeu de données\n\n\nLors de la réception de ce message, le module de collecte va l'ajouter dans la pile des demandes à traiter persistée en base de données et envoie un accusé de réception au nœud producteur.\n\nLe module de collecte va dépiler de manière asynchrone la liste des messages afin de réaliser les opérations demandées.\n\nA l'issue du traitement, le module de collecte envoie au nœud producteur un rapport d'intégration indiquant le résultat de l'intégration et éventuellement des informations de qualité des métadonnées.\n\n1.2. Collecte en mode « Moissonnage »\n\nEn mode « moissonnage », le diagramme de séquence d'appel est le suivant :\n\n\n\nFigure 2 - Diagramme de séquence \"moisonnage\"\n\nComme l'indique le schéma ci-dessus, le module de collecte des données du portail RUDI commence par appeler le nœud producteur afin de collecter par leur identifiant unique tous les jeux de données dont les métadonnées ont été modifiées depuis la dernière date de collecte réussie.\n\nLes modifications peuvent être des créations, des mises à jour ou des suppressions de jeux de données.\n\nPour chaque jeu de données créé ou modifié qui a été identifié par l'opération précédente, le module de collecte appelle le nœud producteur afin de récupérer les métadonnées.\n\nLe module de collecte traite ensuite de manière asynchrone l'intégration des données et la suppression des jeux de données.\n\nPour chaque jeu de données traité, le module de collecte envoi au nœud producteur d'origine un rapport d'intégration indiquant le résultat de l'intégration.\n\nCe rapport d'intégration à vocation à permettre à un nœud producteur de ne fonctionner que par moissonnage et d'être ainsi informé qu'un jeu de données particulier a été intégré dans le portail.\n\n#\n3. contrat d'interface Portail / nœud PRODUCTEUR\n\n3.1. Périmètre\n\nLe contrat d'interface RUDI/Producteur porte sur les grands thèmes suivants :\n\n\n  Jeux de données\n    \n      L'interface proposée doit permettre au portail RUDI d'accéder aux données des jeux de données publiés dans le portail RUDI par un nœud producteur.\n      Chaque jeu de données doit être identifié de manière unique au sein de RUDI.\n    \n  \n  Métadonnées\n    \n      L'interface proposée doit permettre au portail RUDI :\n      La collecte des métadonnées d'un jeu de données proposé par le producteur à partir de l'identifiant unique\n      La notification de l'intégration des métadonnées d'un jeu de données\n      L'interface proposée par RUDI doit permettre aux producteurs de notifier la modification des métadonnées d'un jeu de données.\n    \n  \n  Données\n    \n      L'interface proposée doit permettre au portail RUDI de récupérer les données d'un jeu de données.\n      Cette récupération doit pouvoir être réalisée en fonction de l'utilisateur humain ou non ayant demandé les données mais aussi si possible en prenant en compte les notions de pagination, de tri et de filtrage par critère temporel, géographique et par mots-clefs.\n    \n  \n  Consentement\n    \n      L'interface proposée doit permettre au portail RUDI de transférer au producteur de données, les informations de consentement recueillies par RUDI auprès des utilisateurs. Ce consentement doit être pris en compte lors de la récupération des données.\n    \n  \n  Supervision\n    \n      L'interface proposée doit permettre au portail RUDI de superviser le nœud du producteur afin de prendre en compte la qualité de service associée.\n    \n  \n\n\nPour certains producteurs, le contrat d'interface doit aussi couvrir le thème suivant :\n\n\n  Appariement\n\n\nL'interface proposée doit permettre au portail RUDI et au producteur de réaliser l'appariement (mise en correspondance) d'un utilisateur RUDI et d'un utilisateur connu du système du producteur)\n\n3.2. Schéma de données\n\n3.2.1. Format des dates\n\nLes dates sont au format ISO-8601 et prennent la forme :\n\n\n  YYYY-MM-DD pour les dates\n    \n      Exemple : 2020-12-14\n    \n  \n  YYYY-MM-DDTH24:MI:SS.nano pour les « date+heure » - ce format est nommé « Timestamp » dans le reste du document.\n    \n      Exemple : 2020-12-14T09:56:34.592384024\n    \n  \n  YYYY-MM-DDTH24:MI:SS.nano&lt;+/- timezone offset ou Z pour UTC&gt; pour les « date+heure avec time-zone » - ce format est nommé « Timestamp avec time-zone » dans le reste du document.\n    \n      Exemple : 2020-12-14T09:56:34.592384024+0100\n    \n  \n\n\n3.2.2. Rapport d'intégration – #/components/schemas/Report\n\n3.2.2.1. Généralité\n\nLe rapport d'intégration est de la forme suivante :\n\n{\n  'report\\_id': '',\n  'submission\\_date': '',\n  'treatment\\_date': '',\n  'method' : ('POST'|'PUT'|'DELETE')\n  'version':'',\n  'global\\_id': '',\n  'resource\\_title': '',\n  'integration\\_status': ('OK'|'KO'),\n  'comment': '',\n  'errors': [\n    {\n      'error\\_code': '',\n      'error\\_message': ''\n      'field\\_name': '',\n    }\n  ]\n}\n\n\n3.2.2.2 Détail des données\n\nLe tableau ci-dessous présente les données présentes dans le rapport d'intégration et leurs caractéristiques.\n\n\n  \n    \n      Nom balise\n      Description\n      Niveau\n      Obligatoire\n      Type\n      Taille\n    \n  \n  \n    \n      report_id\n      Identifiant du rapport d'intégration\n      1\n      Oui\n      UUID v4\n       \n    \n    \n      submission_date\n      Date de soumission de la demande d'intégration\n      1\n      Oui\n      Timestamp\n       \n    \n    \n      treatment_date\n      Date de traitement de l'intégration du jeu de donnéesdans Rudi\n      2\n      Oui\n      Timestamp\n       \n    \n    \n      version\n      Numéro de la version de l'API utilisée par le nœud producteur pour communiquer avec le portail RUDI\n      1\n      Oui\n      Numérique\n      2\n    \n    \n      method\n      Méthode de soumission utilisée\n      1\n      Oui\n      Enuméré\n      6\n    \n    \n      resource_id\n      Identifiant du jeu de donnéesdans le système Rudi\n      2\n      Oui\n      UUID v4\n       \n    \n    \n      title\n      Nom du jeu de données\n      2\n      Non\n      Texte\n      Identique à lAPI\n    \n    \n      Integration_status\n      État de l'intégration du jeu de donnéesdans Rudi. 2 valeurs possibles :·OK : l'intégration du jeu de données s'est bien déroulée·KO : l'intégration du jeu de données est en erreur\n      2\n      Oui\n      Enuméré\n      2\n    \n    \n      comment\n      Commentaire sur l'état de l'intégration. Formaté.·Si etat_integration = OK, commentaire = l'intégration du jeu de données\"nom_jeu_de_donnee\" s'est bien déroulée le \"date_traitement_jdd_Rudi\".·Si etat_integration = KO, commentaire = l'intégration du jeu de données\"nom_jeu_de_donnee\" ne s'est pas déroulée correctement, le \"date_traitement_jdd_Rudi. Veuillez consulter les erreurs ci-dessous et après correction des erreurs, renvoyer votre jeu de données. Pour plus d'information, vous pouvez contacter votre administrateur Rudi.\".\n      2\n      Oui\n      Texte\n      255\n    \n    \n      errors\n      Liste des erreurs rencontrées lors de l'intégration du jeu de données. L'objectif est de lister l'ensemble des erreurs rencontrées sur le jeu de données afin d'éviter de multiple envoi pour un même jeu de données(à chaque envoi, une nouvelle erreur est rencontrée).\n      2\n      Fonction de « status » :·Non si etat_integration = 1·Oui si etat_integration = 0\n      Liste dobjets\n      Infini\n    \n    \n      error_code\n      Code technique de l'erreur(Cf. 3.2.2.3)\n      3\n      Oui\n      Texte\n      7\n    \n    \n      field_name\n      Nom du champ concerné par l'erreur (le cas échéant)\n      3\n      Non\n      Texte\n      30\n    \n    \n      error_message\n      Descriptif de l'erreur(Cf 3.2.2.3)\n      3\n      Oui\n      Texte\n      255\n    \n  \n\n\n3.2.2.3. Détail des erreurs possibles\n\nLe tableau ci-dessous liste les différents cas d'erreur possibles.\n\n\n  \n    \n      code_erreur\n      commentaire_erreur\n    \n  \n  \n    \n      ERR-101\n      Le format du fichier de métadonnées transmis est incorrect.\n    \n    \n      ERR-102\n      La balise \"nom_balise\" est inconnue\n    \n    \n      ERR-103\n      Le paramètre \"nom_parametre\" est manquant\n    \n    \n      ERR-104\n      Autres erreurs d'intégration\n    \n    \n      ERR-105\n      Erreur inconnue: l'erreur n'a pas été reconnue, veuillez contacter l'administrateur Rudi afin d'analyser l'erreur.\n    \n    \n      ERR-106\n      La version de metadonnées \"api_version\" n’est pas supportée. La version courante est X.X.X\n    \n    \n      ERR-1XX\n      …. Erreurs de base, à définir.\n    \n    \n      ERR-201\n      Le type du champ \"nom_champ\" n'est pas le bon (format attendu : \"format attendu\" / format reçu : \"format_reçu\" )\n    \n    \n      ERR-202\n      Le champ \"nom_champ\" est manquant alors qu'il est obligatoire.\n    \n    \n      ERR-203\n      La longueur du champ dépasse la limite autorisée: la taille attendue est \"taille_champ_Rudi\" pour \"nom_champ\" alors que la longueur de la valeur envoyée est \" taille_champ_envoye\").\n    \n    \n      ERR-2XX\n      …. Erreurs sur le type du champ, à définir.\n    \n    \n      ERR-301\n      Des caractères ne sont pas acceptés dans le \"nom_champ\"\n    \n    \n      ERR-302\n      La valeur saisie ne correspond pas au référentiel des valeurs attendues pour le champ \"nom_champ\" (valeur saisie : \"valeur_saisie\" / référentiel attendu : \"liste des valeurs attendue séparées par des virgules\"\n    \n    \n      ERR-303\n      La valeur saisie \"valeur_saisie\" pour le champ \"nom_champ\" ne correspond pas à un code de concept SKOS connu\n    \n    \n      ERR-304\n      La valeur saisie \"valeur_saisie\" pour le champ \"nom_champ\" est déjà utilisée\n    \n    \n      ERR-3XX\n      … Erreur en lien avec les valeurs d'un champ, à définir.\n    \n    \n      ERR-403\n      Le nœud fournisseur authentifié n’est pas le créateur du jeu de données\n    \n    \n      ERR-500\n      Une erreur technique est survenue. Veuillez contacter l’administrateur Rudi pour analyser l’erreur.\n    \n    \n      ERR-XXX\n      … Autres types d'erreurs, autres erreurs, à définir.\n    \n  \n\n\n3.2.3. Identifiant Rudi\n\nL'identifiant d'un jeu de données RUDI est une chaîne de caractères composée comme suit :\n\n&lt;UUID v4&gt;\n\n\nL'expression régulière permettant de définir un tel champ est la suivante :\n\n/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n\n\n3.2.4** Métadonnées d'un jeu de données – Rudi #/components/schemas/Metadata**\n\nCet objet représente l'ensemble des métadonnées d'un jeu de données (Cf. 4.1).\n\n3.2.5. Liste de métadonnées – #/component/schemas/MetadataList\n\n{\n  'total': &lt;int64&gt;,\n  'items': [\n    #/components/schemas/Metadata\n  ]\n}\n\n\n\n  \n    \n      Nom balise\n      Description\n      Niveau\n      Obligatoire\n      Type\n      Taille\n    \n  \n  \n    \n      total\n      Nombre total d'éléments répondant à la requête\n      1\n      Oui\n      Int64\n       \n    \n    \n      items\n      Liste des métadonnées\n      1\n      Oui\n      List d'objet de type Metadata\n       \n    \n  \n\n\n3.3. URL d'accès et gestion du versionnement\n\nLes différentes API sont exposées avec une URL de la forme : &lt;host&gt;/&lt;prefixe&gt;\n\n\n  &lt;prefixe&gt; prendra la forme api par défaut mais peut prendre d'autres formes si plusieurs typologie d'API sont exposées.\n    \n      Exemple &lt;host&gt;/api\n    \n  \n\n\nL'API dans sa version la plus récente sera exposée en &lt;host&gt;/&lt;prefixe&gt;/*\n\nCela signifie que la version la plus récente de l'API est accessible directement sans changement de code des appelants.\n\nLes API dans les versions plus anciennes seront exposées en\n\n&lt;host&gt;&lt;prefixe&gt;&lt;version&gt;/*\n\n\n\n  &lt;version&gt; prendra la forme v&lt;Majeur&gt; ou v&lt;Majeur&gt;.&lt;Mineur&gt;\n    \n      Exemple : &lt;host&gt;/api/v1 ou &lt;host&gt;/api/v1.1\n    \n  \n\n\nCela signifie que les modifications de niveau « Révision » n'ont pas d'impact sur la version de l'API.\n\nDans la mesure du possible, seul le niveau &lt;Majeur&gt; sera utilisé.\n\n3.4. Contrat d'interface Jeu de données &amp; Métadonnées\n\n3.4.1. Service Portail\n\n3.4.1.1. URL &amp; préfixe\n\nLes différents services décrits ci-après seront accessibles avec le préfixe « api ».\n\n\n  Exemple &lt;host&gt;/api/*\n\n\n##\n\n3.4.1.2. Création d'un jeu de données\n\nDescription :\n\nSoumission d'une demande de création d'un jeu de données par ses métadonnées\n\nPOST &lt;&gt;/resources\n\nBody :\n\n\n  #/components/schemas/Metadata\n\n\nCode retour :\n\n\n  200 : prise en compte de la demande\n    \n      report_id : UUID V4\n    \n  \n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\n3.4.1.3. Modification des métadonnées d'un jeu de données\n\nDescription :\n\nSoumission d'une demande de modification d'un jeu de données par ses métadonnées\n\nPUT &lt;&gt;/resources\n\nBody :\n\n\n  #/components/schemas/Metadata\n\n\nCode retour :\n\n\n  200 : prise en compte de la demande\n    \n      report_id : UUID V4\n    \n  \n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  404 : le global_id contenu dans la métadonnée est inconnu\n    \n      $ref: \"#/components/responses/Error404NotFound\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\n3.4.1.4. Suppression d'un jeu de données\n\nDescription :\n\nSoumission d'une demande de suppression d'un jeu de données\n\nDELETE &lt;&gt;/resources/{global_id}\n\nCode retour :\n\n\n  200 : prise en compte de la demande\n    \n      report_id : UUID V4\n    \n  \n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  404 : le global_id contenu dans la métadonnée est inconnu\n    \n      $ref: \"#/components/responses/Error404NotFound\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\n3.4.1.5. Obtention d'un Identifiant RUDI\n\nDescription :\n\nDemande de génération d'un identifiant RUDI (UUID v4).\n\nL’identifiant RUDI généré tiendra compte des informations contenues dans le token JWT d'authentification pour déduire le producteur.\n\nGET &lt;&gt;/resources/id_generation\n\nCode retour :\n\n\n  200 : prise en compte de la demande\n    \n      #/components/schémas/RudiId\n    \n  \n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  404 : le global_id contenu dans la métadonnée est inconnu\n    \n      $ref: \"#/components/responses/Error404NotFound\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\n3.4.2. Service Noeud\n\n3.4.2.1. URL &amp; préfixe\n\nLes différents services décrits ci-après seront accessibles avec le préfixe « api ».\n\n\n  Exemple &lt;host&gt;/api/*\n\n\n3.4.2.2. Recherche des jeux de données\n\nDescription :\n\nRecherche des jeux de données\n\nGET &lt;&gt;/resources\n\nQuery :\n\n\n  limit : int32\n  offset : int32\n  update_date_min : timestamp\n  update_date_max : timestamp\n  &lt;à compléter&gt;\n\n\nCode retour :\n\n\n  200 : prise en compte de la demande\n    \n      #/components/schémas/ResourceListInfo\n    \n  \n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  404 : le global_id contenu est inconnu\n    \n      $ref: \"#/components/responses/Error404NotFound\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  410 :\n    \n      $ref: \"#/components/responses/Error410Gone\"\n    \n  \n  423 :\n    \n      $ref: \"#/components/responses/Error423Locked\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\n&lt;à compléter&gt;\n\n3.4.2.3. Obtention d'un jeu de données\n\nDescription :\n\nObtention des métadonnées d'un jeux de données\n\nGET &lt;&gt;/resources/{global_id}\n\nCode retour :\n\n\n  200 : prise en compte de la demande\n    \n      #/components/schémas/RudiId\n    \n  \n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  404 : le global_id contenu est inconnu\n    \n      $ref: \"#/components/responses/Error404NotFound\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  410 :\n    \n      $ref: \"#/components/responses/Error410Gone\"\n    \n  \n  423 :\n    \n      $ref: \"#/components/responses/Error423Locked\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\n3.4.2.4. Réception d'un résultat d'intégration\n\nDescription :\n\nRéception de l'intégration d'une demande réalisée par les services 3.4.1.2, 3.4.1.3, 3.4.1.4..\n\nPUT &lt;&gt;/resources/{global_id}/report\n\nBody : #/components/schemas/Report\n\nCode retour :\n\n\n  200 : Prise en compte du rapport\n  400 :\n    \n      $ref: \"#/components/responses/Error400BadRequest\"\n    \n  \n  401 :\n    \n      $ref: \"#/components/responses/Error401Unauthorized\"\n    \n  \n  403 :\n    \n      $ref: \"#/components/responses/Error403Forbidden\"\n    \n  \n  404 : le global_id contenu dans la métadonnée est inconnu\n    \n      $ref: \"#/components/responses/Error404NotFound\"\n    \n  \n  406 :\n    \n      $ref: \"#/components/responses/Error406NotAcceptable\"\n    \n  \n  408 :\n    \n      $ref: \"#/components/responses/Error408RequestTimeout\"\n    \n  \n  429 :\n    \n      $ref: \"#/components/responses/Error429TooManyRequests\"\n    \n  \n  500 :\n    \n      $ref: \"#/components/responses/Error500InternalServer\"\n    \n  \n  503 :\n    \n      $ref: \"#/components/responses/Error503ServiceUnavailable\"\n    \n  \n\n\nLes codes suivants impliquent que le portail doit retenter de notifier le nœud producteur du traitement de sa demande :\n\n400, 401, 408, 429, 503\n\nLe portail retentera l'opération 5 fois à 1 heure d'intervalle.\n\nAu-delà de ce délai, une alerte doit être remontée côté portail pour une prise charge humaine.\n\n3.4.3. Exemple de séquencement des appels\n\n3.4.3.1. Notification\n\nLe mécanisme de notification prend place lorsqu'un nœud producteur souhaite informer le portail de la publication (ou republication) d'un jeu de données.\n\nPar exemple, lors de la création d'un nouveau jeu de données par le producteur, le séquencement des appels entre portail et nœud producteur est le suivant :\n\n\n  Obtention par le nœud d'un token JWT. Ce Point sera détaillé par ailleurs\n  Si le producteur le souhaite, il peut demander un identifiant unique auprès du portail (GET &lt;&gt;/resources/generation_id). Cet identifiant unique est appelé « global_id ».\n  Attribution par le nœud producteur de l'identifiant au nouveau jeu de données\n  Soumission par le nœud d'une demande de création (POST &lt;&gt;/resources) avec la structure de métadonnées attendue\n    \n      Réponse du portail par un code 200 avec un identifiant unique correspondant à la demande. Cet identifiant est appelé « report_id ».\n    \n  \n  Le portail traite la demande de manière asynchrone (mais dans l'ordre des demandes) et à l'issue de ce traitement le portail appelle le nœud d'origine pour lui transmettre le rapport d'intégration (PUT &lt;&gt;/resources/report/{global_id}\n    \n      Réponse du portail par un code 200\n      Ou pour les codes 400, 401, 408, 429, 503, 5 nouvelles tentatives possibles espacées d'une heure\n    \n  \n\n\n3.4.3.2. Moissonnage\n\nLe mécanisme de moissonnage intervient lorsqu'un nœud producteur ne met pas en œuvre le mécanisme de notification. Dans ce cas de figure, le portail, pour réaliser la mise à jour des métadonnées des différentes jeux, vient chercher, sur chaque nœud producteur, les jeux de données dont les métadonnées ont changé.\n\nLe séquencement des appels entre Portail et nœud producteur est le suivant :\n\n\n  Obtention par le portail d'un token JWT\n  Demande auprès du nœud par le portail des différents jeux de données modifiés depuis une date connue du portail (GET &lt;&gt;/resources avec des paramètres et de la pagination)\n    \n      Réponse du nœud par un code 200 avec une liste d'éléments\n    \n  \n  Pour chaque élément reçu grâce à l'appel précédent, contrôle de la date de dernière modification par rapport à la date connue du portail pour ce jeu de données\n  Si le jeu de données doit être mis à jour, récupération des métadonnées du jeu (GET &lt;&gt;/resources/{global_id})\n    \n      Réponse du nœud par un code 200 avec les métadonnées du jeu de données\n    \n  \n  Enregistrement dans la file d'attente d'une activité de mise à jour (création/modification/suppression)\n  Le portail traite la demande et à l'issue de ce traitement le portail appelle le nœud d'origine pour lui transmettre le rapport d'intégration (PUT &lt;&gt;/resources/report/{global_id}\n    \n      Réponse du portail par un code 200 ou\n      Ou pour les codes 400, 401, 408, 429, 503, 5 nouvelles tentatives possibles espacées d'une heure\n    \n  \n\n\n#\n4. Annexes\n\n4.1. Annexe – Structure des métadonnées\n\nVersion de l'API au moment de l'écriture de ce document:\n\nhttps://app.swaggerhub.com/apis/OlivierMartineau/RUDI-PRODUCER/1.0.3\n\nDernière version de l'API:\n\nhttps://app.swaggerhub.com/apis/OlivierMartineau/RUDI-PRODUCER\n"
      },
      {
        "title"    : "Code source",
        "category" : "Autres",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/autres/code_source/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Code source\nRudi est publié sous licence EUPL1.2\n\n  Code source du portail : https://github.com/sigrennesmetropole/rudi_portal\n\n",
        "content"  : "Code source\nRudi est publié sous licence EUPL1.2\n\n  Code source du portail : https://github.com/sigrennesmetropole/rudi_portal\n\n\n\n\n\n  Code source du noeud producteur : https://github.com/sigrennesmetropole/rudi_producer_node\n\n\n\n"
      },
      {
        "title"    : "Liens utiles",
        "category" : "Autres",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/autres/liens_utiles/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Retrouvez ci-dessous l’ensemble des liens et ressources pour appréhender le portail et vous saisir de Rudi :\n",
        "content"  : "Retrouvez ci-dessous l’ensemble des liens et ressources pour appréhender le portail et vous saisir de Rudi :\n\nPortail Rudi\n\n  Accédez au portail Rudi : http://rudi.bzh\n\n\nFeuille de route publique\n\n  Consultez l’avancement du développement et les prochaines mises à jour du portail : https://roadmap.rudi.bzh/rudi\n\n\nBlog du projet\n\n  Accédez au blog des années de projet Rudi (2019 - 2023) : http://blog.rudi.bzh/accueil\n\n\nWiki\n\n  Consultez et téléchargez toutes les ressources ouvertes réalisées dans le cadre du projet Rudi : https://blog.rudi.bzh/yeswiki\n\n\n"
      },
      {
        "title"    : "Démos et tutos",
        "category" : "Autres",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/autres/tutoriels/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Grâce à ces vidéos, laissez vous guider pas à pas dans le portail de données territoriales Rudi :",
        "content"  : "Grâce à ces vidéos, laissez vous guider pas à pas dans le portail de données territoriales Rudi :\n\n\n\n\n\n\n\n"
      },
      {
        "title"    : "Accès",
        "category" : "Accéder à vos données personnelles",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/donnees_personnelles/access/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "La demande d’accès\nConformément aux directives européennes, vous avez la possibilité de demander l’accès à vos données personnelles détenues par les producteurs de données. La plateforme Rudi vous donne la possibilité de réaliser ce type de demande, sur certains jeux de données en particulier, de manière expérimentale.\n",
        "content"  : "La demande d’accès\nConformément aux directives européennes, vous avez la possibilité de demander l’accès à vos données personnelles détenues par les producteurs de données. La plateforme Rudi vous donne la possibilité de réaliser ce type de demande, sur certains jeux de données en particulier, de manière expérimentale.\n\nLa liste des jeux de données concernés par ce genre de demande est visible depuis votre espace personnel, dans la partie Données personnelles.\nDepuis cette liste, vous pouvez consulter le détail de chaque jeu de données contenant des données personnelles.\n\nDepuis le détail d’un jeu de données, en cliquant sur « accéder à mes données », vous arriverez sur un formulaire dans lesquels vous êtes invités à renseigner vos informations d’identification.\nCes informations correspondent aux informations strictement nécessaires pour vous identifier de manière unique et fiable. Les informations saisies ne sont utilisées que dans le cadre de cette demande et seront supprimées une fois la demande traitée.\n\nUne fois votre demande envoyée, elle est transmise à l’administrateur du portail Rudi. Celui-ci vérifie leur exactitude. Dès que vos informations sont validées par l’administrateur de Rudi, votre demande est transmise au producteur concerné. Le producteur vous indique ensuite s’il dispose ou non des données vous concernant. Si la réponse est positive, il vous y donne ensuite accès.\n\nDeux modes d’accès sont possibles :\n\n  Directement via le portail Rudi (API) : dans ce cas, vos données sont consultables depuis votre espace personnel / dans le détail du jeu de données / onglet Données\n  Par mail (OUT) : vous recevez un mail de la part du producteur contenant vos données personnelles.\nÀ tout moment, vous pouvez consulter l’état de votre demande depuis votre espace personnel, partie « Données personnelles ».\n\n\nLe traitement de votre demande peut prendre jusqu’à XX mois (valeur à déterminer à l’issue de la phase d’expérimentation).\n\n\n"
      },
      {
        "title"    : "Effacement",
        "category" : "Accéder à vos données personnelles",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/donnees_personnelles/effacement/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "La demande d’effacement\nCette fonctionnalité n’est pas encore disponible dans le portail Rudi.\nConformément aux directives européennes, vous avez la possibilité de demander l’effacement de vos données personnelles auprès des producteurs en disposant si au moins une de ces situations correspond à votre cas :\n",
        "content"  : "La demande d’effacement\nCette fonctionnalité n’est pas encore disponible dans le portail Rudi.\nConformément aux directives européennes, vous avez la possibilité de demander l’effacement de vos données personnelles auprès des producteurs en disposant si au moins une de ces situations correspond à votre cas :\n\n\n  Vos données sont utilisées à des fins de prospection ;\n  Les données ne sont pas ou plus nécessaires au regard des objectifs pour lesquelles elles ont été initialement collectées ou traitées ;\n  Vous retirez votre consentement à l’utilisation de vos données ;\n  Vos données font l’objet d’un traitement illicite (par exemple, publication de données piratées) ;\n  Vos données ont été collectées lorsque vous étiez mineur dans le cadre de la société de l’information (blog, forum, réseau social, site web…) ;\n  Vos données doivent être effacées pour respecter une obligation légale ;\n  Vous vous êtes opposé au traitement de vos données et le responsable du fichier n’a pas de motif légitime ou impérieux de ne pas donner suite à cette demande.\nCependant ce droit à l’effacement n’est pas possible si l’effacement de vos données va à l’encontre :\n  De l’exercice du droit à la liberté d’expression et d’information ;\n  Du respect d’une obligation légale (ex. délai de conservation d’une facture = 10 ans) ;\n  De l’utilisation de vos données si elles concernent un intérêt public dans le domaine de la santé ;\n  De leur utilisation à des fins archivistiques dans l’intérêt public, à des fins de recherche scientifique ou historique ou à des fins statistiques ;\n  De la constatation, de l’exercice ou de la défense de droits en justice.\n\n\nRudi vous simplifie cette démarche en vous mettant en relation avec les producteurs concernés.\n\n"
      },
      {
        "title"    : "Accéder à vos données",
        "category" : "Accéder à vos données personnelles",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/donnees_personnelles/intro/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Les jeux de données personnelles\nConformément aux directives européennes en matière de données personnelles, vous avez la possibilité de demander l’accès, la rectification et la suppression de vos données personnelles auprès des producteurs de données concernés.\n",
        "content"  : "Les jeux de données personnelles\nConformément aux directives européennes en matière de données personnelles, vous avez la possibilité de demander l’accès, la rectification et la suppression de vos données personnelles auprès des producteurs de données concernés.\n\nRudi vous permet d’exercer vos droits en simplifiant et centralisant vos démarches au sein de votre espace personnel.\n\nCliquez sur une rubrique ci-dessous pour obtenir plus d’informations.\n\n\n  Accéder à vos données personnelles\n  Demander la rectification de données vous concernant\n  Demander l’effacement de données vous concernant\n\n\n\n"
      },
      {
        "title"    : "Rectification",
        "category" : "Accéder à vos données personnelles",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/donnees_personnelles/rectification/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "La demande de rectification\nCette fonctionnalité n’est pas encore disponible dans le portail Rudi.\nConformément aux directives européennes, vous aurez la possibilité de demander la rectification de vos données personnelles gérées par certains producteurs de données de Rudi.\n",
        "content"  : "La demande de rectification\nCette fonctionnalité n’est pas encore disponible dans le portail Rudi.\nConformément aux directives européennes, vous aurez la possibilité de demander la rectification de vos données personnelles gérées par certains producteurs de données de Rudi.\n"
      },
      {
        "title"    : "Mes données personnelles",
        "category" : "Comprendre les espaces personnels",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/espace_personnel_explication/mes_donnees_personelles/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Comprendre son espace - Mes données personnelles\n",
        "content"  : "Comprendre son espace - Mes données personnelles\n\nCet espace est composé de deux onglets.\n\nIl regroupe l’ensemble de vos actions en lien avec vos données personnelles sur RUDI.\n\n\n  Le premier onglet est nommé “Données personnelles”, il regroupe l’ensemble des jeux de données pour lesquels vous pouvez effectuer une demande d’accès, d’information, de rectification (Cf : Accéder à vos données (rudi.bzh) ).\n  Le deuxième onglet est nommé “Mes consentements”, il regroupera l’ensemble de vos consentements établis sur RUDI pas encore développé).\n\n\n\n"
      },
      {
        "title"    : "Mes notifications",
        "category" : "Comprendre les espaces personnels",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/espace_personnel_explication/mes_notifications/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Comprendre son espace - Mes notifications\n",
        "content"  : "Comprendre son espace - Mes notifications\n\nCet espace est composé d’un onglet.\nIl s’agit de votre “boite mail RUDI”, en effet vous y trouverez l’ensemble des demandes qui vous ont été adressées et qui nécessite une action de votre part.\n\n\n"
      },
      {
        "title"    : "Mon activité",
        "category" : "Comprendre les espaces personnels",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/espace_personnel_explication/mon_activite/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Comprendre son espace - Mon activité\n",
        "content"  : "Comprendre son espace - Mon activité\n\nCet espace est composé de deux onglets.\n\nIl regroupe l’ensemble de vos actions effectuées sur RUDI.\n\nLe premier onglet est nommé “Mes réutilisations”, il regroupe l’ensemble des réutilisations que vous avez publiés sur RUDI. \nLe tableau est composé de cinq colonnes : Date de mise à jour, Titre de la réutilisation, Confidentialité, Statut de la réutilisation, Jeux de données.\n\n\n\nAu clic sur une réutilisation vous accédez au détail de celle-ci. Ce détail est organisé en 3 onglets.\n\n  Le premier, nommé “information”, vous présente les informations relatives à la réutilisation et renseignées lors de l’étape de “déclaration d’une réutilisation”.\n  Le deuxième, nommé “Jeux de donnés”, vous présente les jeux de données associés à votre projet. Cet onglet a un bouton “Souscrire” vous permettant de souscrire à un jeu de données à accès restreint lorsque votre demande a été approuvée.\n\n\n\n\n\n  Le troisième, nommé “API”, vous permets d’accéder à vos clé secrète et publique vous permettant de requêter des jeux de données.\n\n\nEnsuite nous avons trois tableaux. Ces tableaux sont découpés selon les typologies de médias. Le premier correspond aux jeux de données ouverts, le deuxième aux jeux de données à accès restreint, le troisième aux demandes de nouvelles données. \nLes boutons d’actions :\nLorsque votre réutilisation est au statut “Réutilisation – En projet” alors vous pouvez agir sur les jeux de données qui composent votre projet. Un bouton “Ajouter” est disposé en dessous de chacun des tableaux. Au clic sur celui-ci, une pop-in s’ouvrira avec l’ensemble des jeux de données, il vous suffit alors de cliquer sur confirmer.\n\n\n\nLe bouton de retrait d’un jeu de données de votre réutilisation sera toujours cliquable, en revanche, il vous faudra attendre le traitement de votre demande, dans le cas d’un jeu de données à accès restreint ou de nouvelles données, afin de le retirer.\n\n\n\nEnfin, un outil de visualisation de commentaire est disponible si vous souhaitez consulter la réponse réceptionnée suite à une demande d’accès à un jeu de données à accès restreint ou une demande de nouvelle donnée.\n\n\n\nInformation supplémentaire : Il existe deux états de réutilisation dans RUDI. Le premier est “Réutilisation – En projet”. Ce statut indique aux utilisateur que votre réutilisation est en cours de réalisation. Vous pouvez, alors, agir sur les jeux de données de votre réutilisation. Le deuxième est “Réutilisation- finalisée”. Ce statut indique aux utilisateurs que votre réutilisation est terminée. Vous ne pouvez donc plus agir sur les jeux de données. Ce choix s’effectue lors de la déclaration de votre réutilisation à l’étape 1 et au sein du champ “Statut de votre réutilisation”.\n\nLe deuxième onglet est nommé “Mes demandes”, il regroupe l’ensemble demandes effectuées en votre nom ou au nom d’une organisation à laquelle vous appartenez. \nCet espace est composé de trois tableaux. Ces tableaux présentent les demandes de jeu de données à accès restreint, de demandes de jeux de données personnelles, de demande de nouvelles données. \nOn retrouve les mêmes informations au sein des trois tableaux : Date, Jeu de données, Demandeur, Statut.\n\n\n"
      },
      {
        "title"    : "Mon compte",
        "category" : "Comprendre les espaces personnels",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/espace_personnel_explication/mon_compte/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Comprendre mon espace mon compte\n",
        "content"  : "Comprendre mon espace mon compte\n\nCet espace est composé de deux onglets. \nLe premier onglet nommé “Mon profil” vous présente les informations que vous avez renseigné lors de votre inscription : Nom, Prénom et Adresse e-mail. \nLes fonctionnalités de modification de ces informations ne sont pas encore disponibles depuis l’interface.\n\n\n\nLe deuxième onglet nommé “Mes organisations” vous présente les organisations auxquelles vous appartenez. Les cards sont composées de : l’image de votre organisation, du titre de votre organisation, de la description de votre organisation ainsi que le nombre de jeux de données et de réutilisations déclarées.\n\n\n\nAu clic sur ces cards, vous aurez alors accès à la page de détail complète de votre organisation. Celle-ci est aussi disponible depuis l’onglet “Organisation” accessible depuis le bandeau. Si vous êtes administrateur d’une organisation, alors, un bouton apparaîtra sur la page de détail et est nommé “Organisations”.\n\nAdministrer les membres de mon organisation :\nCette page est composée en deux parties. \nLa première correspond aux informations de votre organisation : son nom et son identifiant.\n\n\n\nAu sein de la dernière colonne de ce tableau à une entrée, vous pouvez accéder à l’outil de modification de mot de passe. Au clic sur celui-ci, une pop-in s’ouvre, vous devrez y renseigner votre ancien mot ainsi que votre nouveau mot de passe conforme aux exigences de sécurité.\n\n\n\nPoint info : Le mot de passe de votre organisation est demandé lorsque vous souhaitez souscrire à un jeu de données à accès restreint pour lequel vous avez reçu une approbation d’utilisation dans le cadre d’une réutilisation.\n\nLa deuxième partie correspond aux informations des membres de votre organisation. \nVous pourrez y effectuer une recherche basée sur le nom, prénom ou l’adresse e-mail de votre membre (un minimum de deux caractère est nécessaire). \nLe tableau est composé de 6 colonnes : Nom, Prénom, Adresse e-mail, Dernière connexion, Date d’ajout, ainsi que le rôle attribué au sein de l’organisation.\n\n\n\nPoint info : En savoir plus sur les rôles. RUDI vous permet d’affecter un rôle à un membre d’organisation. Nous retrouvons le rôle d’éditeur (il peut agir sur RUDI au nom de l’organisation) et le rôle d’administrateur (il peut agir au nom de l’organisation mais aussi la gérer). \nAu sein de la dernière colonne de ce tableau, vous pouvez accéder à l’outil de modification de rôle. Au clic sur celui-ci, une pop-in s’ouvre, l’adresse e-mail de l’utilisateur pour lequel vous souhaitez modifier le rôle est visible en lecture seule, vous n’avez qu’à choisir le nouveau rôle à attribuer au sein du champ “Rôle” et cliquer sur “Modifier”. Les modifications sont immédiates.\n\n\n\nUn deuxième outil est disponible, il s’agit de l’outil “Détacher de l’organisation”. Au clic sur celui-ci, une pop-in s’ouvre, il vous suffit de cliquer sur “Confirmer” pour détacher l’utilisateur de l’organisation. Les modifications sont immédiates.\n\n\n\n"
      },
      {
        "title"    : "Concepts de Rudi",
        "category" : "Glossaire",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/glossaire/concepts-rudi/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Glossaire : notions-clés utilisées sur la plateforme Rudi\n",
        "content"  : "Glossaire : notions-clés utilisées sur la plateforme Rudi\n\n\n\nRéutilisation\nUne Réutilisation est la description par un Utilisateur de l’usage d’un ou plusieurs jeux de données du catalogue. Tout Utilisateur inscrit peut déclarer une Réutilisation en décrivant le résultat produit (article, application, etc) et en indiquant le ou les jeux de données utilisés.\n\nProjet\nUn Projet est la description d’une action mise en œuvre par un Porteur de projet nécessitant une collaboration avec d’autres Utilisateurs de Rudi. Le Porteur de projet en réalise la déclaration dans Rudi. Un projet est notamment caractérisé par ses objectifs, sa durée et les données qu’il utilise. Un projet peut donner lieu à une ou plusieurs Demandes d’accès à des données restreintes. Un projet terminé peut devenir une Réutilisation.\n\nDemande d’accès à des données restreintes\nUne demande d’accès est une requête transmise par un Porteur de projet à un Producteur de données sollicitant l’accès à des Données restreintes afin de les utiliser dans le cadre de son Projet. Le Porteur de projet doit démontrer qu’il remplit les conditions d’accès définies par le Producteur de données. La Demande est ensuite traitée par le Producteur de données, qui doit justifier son refus le cas échéant.\n\nConsentement (collecte)\nAutorisation donnée par une personne physique pour la collecte de Données personnelles la concernant. Dans le cadre de Rudi, ce type de consentement est utilisé uniquement lors de la création de compte et lors de la navigation sur le site, afin de permettre le bon fonctionnement de la plateforme. En revanche, la Gouvernance de Rudi n’accède jamais aux données personnelles gérées par les Producteurs de données.\n\nConsentement (réutilisation)\nAutorisation donnée par une personne physique à la transmission par un Producteur de données à un Porteur de projet de Données personnelles la concernant, afin que celui-ci puisse mener à bien son Projet. Le consentement est toujours accordé à 1 tiers (le Porteur de projet), pour 1 finalité (le Projet) et pour une durée déterminée. La Plateforme Rudi n’a jamais accès jamais aux données : seul le Porteur de projet en est destinataire.\n\nDroits numériques\nEnsemble de droits prévus par le RGPD permettant à une personne physique d’agir sur ses Données personnelles (accès, rectification, effacement…). La Plateforme Rudi propose des fonctionnalités permettant de faciliter aux habitants et usagers des services publics de Rennes Métropole l’activation de ces droits auprès des Producteurs de données qui disposent de données personnelles les concernant.\n"
      },
      {
        "title"    : "Données de Rudi",
        "category" : "Glossaire",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/glossaire/donnees-rudi/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Les données dans Rudi\n",
        "content"  : "Les données dans Rudi\n\nDonnée ouverte (ou Jeu de données ouvert)\nUne Donnée ouverte sur Rudi est une donnée accessible librement à tout Utilisateur. Elle dispose néanmoins de conditions d’utilisation, qui sont définies par la licence qui lui a été attribuée. \n\n\nDonnée restreinte (ou Jeu de données restreint)\nUne Donnée restreinte désigne toute donnée non ouverte sur le catalogue. Il s’agit de données dont le Producteur a indiqué ne donner l’accès qu’à certaines conditions. Les Jeux de données restreints apparaissent dans le catalogue, mais leur accès doit faire l’objet d’une Demande via un Projet. Les conditions d’accès sont définies par le producteur de données, en accord avec la réglementation en vigueur sur l’accès aux données. \n\n\nDonnée personnelle (ou Donnée à caractère personnel)\nToute donnée permettant d’identifier directement ou indirectement une personne. Les Producteurs de données peuvent détenir des Données personnelles collectées dans le cadre de leur activité. Ces données peuvent éventuellement être transmises à des Porteurs de projet, et ce uniquement avec le Consentement explicite des personnes concernés. Les données personnelles peuvent également être anonymisées par leur producteur (voir Donnée anonymisée).\n\n\nJeu de données anonymisé (ou Donnée anonymisée)\nUn Jeu de données anonymisé est un jeu de données portant sur des données à caractère personnel qui a fait l’objet d’un traitement visant à empêcher la ré-identification des personnes concernées. Une donnée anonymisée peut être partagée sans le Consentement des personnes concernées. Le traitement d’anonymisation est effectué sous la responsabilité du Producteur de données avant sa publication. La liste des méthodes d’anonymisation autorisées est publiée et maintenue à jour par la Gouvernance.\n"
      },
      {
        "title"    : "Généralités",
        "category" : "Glossaire",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/glossaire/general/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Glossaire : généralités\n",
        "content"  : "Glossaire : généralités\n\nPlateforme Rudi\nApplication composée du portail Rudi (cœur de la Plateforme) et de l’ensemble des Nœuds producteur Rudi. Elle est développée par le consortium Rudi. Son code est publié sous la licence publique de l’Union européenne (EUPL), version 1.2.\n\nPortail (ou Portail Rudi)\nApplication web open-source constituant le cœur de la Plateforme Rudi, permettant à ses Utilisateurs de parcourir le catalogue des jeux de données publiées par l’ensemble des Nœuds producteurs et d’interroger ce catalogue pour accéder aux données. Les Utilisateurs inscrits disposent également d’un espace personnel permettant de déclarer et gérer des Réutilisations, des Projets, de formuler des Demandes d’accès spécifiques ou d’y répondre, ou d’agir sur leurs Données personnelles.\n\nNœud producteur\nApplication open-source faisant partie intégrante de la Plateforme Rudi, regroupant toutes les fonctionnalités liées à la publication de données dans Rudi : chargement des jeux de données, déclaration des métadonnées, etc. Un Nœud producteur est généralement hébergé sous la responsabilité du Producteur de données qui en est gestionnaire, dans son système d’information ou dans le cloud, mais peut aussi être partagé entre plusieurs Producteurs et mis à disposition par la Gouvernance (cas d’un “nœud mutualisé”)\n\nGouvernance\nOrganisation responsable de la Plateforme Rudi. La Gouvernance met en œuvre la plateforme et fixe les droits et les obligations des utilisateurs. Elle définit les orientations de la plateforme, ses développements éventuels, ses interconnexions avec d’autres systèmes de partage de données, elle décide des investissements et assure le financement de la plateforme. Sur la Plateforme, elle intervient notamment à travers un ou plusieurs Animateur(s).\nPendant la phase de construction du projet, la gouvernance de Rudi est exercée par les partenaires de Rudi, unis par un accord de consortium et réunis en comité de pilotage présidé par Rennes Métropole.\n\nFédération\nEnsemble des Producteurs de données ayant choisi de contribuer à Rudi en y publiant des données, ouvertes ou non. La Fédération est régie par un règlement qui fixe les droits et obligations des Producteurs de données vis-à-vis de la Gouvernance et des différents Utilisateurs de la Plateforme.\n\n"
      },
      {
        "title"    : "Rôles",
        "category" : "Glossaire",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/glossaire/roles/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Les différents rôles sur la plateforme Rudi\n",
        "content"  : "Les différents rôles sur la plateforme Rudi\n\n\n\nProducteur de données\nUn Producteur de données est une personne morale qui a adhéré à la Fédération Rudi et qui publie au moins 1 jeu de données accessible via Rudi. Cette publication se fait au moyen d’un Nœud producteur.\n\nRéutilisateur\nUn Réutilisateur est une personne physique ou morale utilisant des données du catalogue de Rudi. Ses Réutilisations peuvent être déclarées sur la plateforme afin de mettre en avant l’utilisation qui est faite des données. Cette déclaration n’est pas obligatoire et requiert l’inscription sur la plateforme. À la différence du Porteur de projet, le Réutilisateur est autonome dans sa réutilisation des données, et ne peut accéder qu’aux données ouvertes.\n\nPorteur de projet\nUn Porteur de projet est une personne physique ou morale ayant déclaré sur la plateforme Rudi un Projet de réutilisation de données du catalogue. À la différence d’un simple Réutilisateur, déclarer son projet lui permet d’accéder à certaines fonctionnalités, comme la demande d’accès aux Données restreintes ou la mise en réseau avec d’autres utilisateurs.\n\nAnimateur Rudi\nUn Animateur est une personne physique agissant pour le compte de la Gouvernance de Rudi sur la Plateforme. L’animateur dispose de droits et d’obligations spécifiques : validation d’un Projet, réponse à des demandes de support, consultation de statistiques…\n\nOrganisation\nUne Organisation est un groupe d’Utilisateurs inscrits qui agissent au nom d’une même personne morale (salariés d’une même structure ou membres d’une association par exemple). Les membres d’une Organisation ont délégation pour créer et gérer des Réutilisations et des Projets au nom de cette organisation. L’organisation est déclarée par un Utilisateur inscrit dans son espace personnel, et peut être rejointe par d’autres utilisateurs inscrits.\n\n"
      },
      {
        "title"    : "Utilisateurs et comptes",
        "category" : "Glossaire",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/glossaire/utilisateurs-comptes/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Les différents types d’utilisateurs et de comptes sur la plateforme Rudi\n",
        "content"  : "Les différents types d’utilisateurs et de comptes sur la plateforme Rudi\n\nUtilisateur (ou Utilisateur de Rudi)\nToute personne physique utilisant la plateforme. Les Utilisateurs peuvent notamment parcourir le catalogue des Jeux de données et les Réutilisations, et accéder aux données ouvertes. D’autres fonctionnalités de la plateforme nécessite la création d’un compte utilisateur (voir Utilisateur inscrit)\n\nUtilisateur inscrit\nToute personne physique disposant d’un compte utilisateur sur la plateforme. La création d’un compte est gratuite et permet notamment la déclaration de Réutilisations ou de Projets, ou encore l’accès à un plus haut niveau de service sur les données ouvertes.\n\nUtilisateur authentifié\nUn Utilisateur authentifié est une personne physique inscrite sur la plateforme et authentifiée comme habitante du territoire et/ou usagère des services publics de Rennes Métropole. L’authentification donne accès à un certain nombre de fonctionnalités, notamment le recours à ses Droits numériques et la gestion du Consentement à la réutilisation de ses données par des Porteurs de projets.\n"
      },
      {
        "title"    : "Gestion des organisations",
        "category" : "Organisation",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/organisation/gestion_des_organisations/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Une fois votre compte créé dans Rudi, vous pouvez rejoindre une organisation afin d’agir en son nom. Vous pourrez alors créer un projet, déclarer une réutilisation au nom de l’organisation. Si votre organisation agit en tant que producteur de données, vous pourrez traiter les demandes d’accès à des jeux de données restreints.\nTous les utilisateurs rattachés à une organisation ont les mêmes droits.\n",
        "content"  : "Une fois votre compte créé dans Rudi, vous pouvez rejoindre une organisation afin d’agir en son nom. Vous pourrez alors créer un projet, déclarer une réutilisation au nom de l’organisation. Si votre organisation agit en tant que producteur de données, vous pourrez traiter les demandes d’accès à des jeux de données restreints.\nTous les utilisateurs rattachés à une organisation ont les mêmes droits.\n\nLa création d’une organisation, l’ajout d’un utilisateur ou sa suppression ne sont pas encore directement possibles depuis l’interface du portail Rudi.\nPour toutes ces actions, vous devez contacter l’animateur Rudi à partir du lien suivant : contact.\n\nDepuis votre espace personnel, vous pouvez consulter la liste des organisations auxquelles vous appartenez.\n"
      },
      {
        "title"    : "Données ouvertes",
        "category" : "Noeud producteur",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/publication/donnee_ouverte/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publication de données ouvertes sur Rudi\nPour publier des jeux de données ouverts, il vous faut vous connecter à un noeud producteur.\n",
        "content"  : "Publication de données ouvertes sur Rudi\nPour publier des jeux de données ouverts, il vous faut vous connecter à un noeud producteur.\n\nVotre noeud producteur vous permet de saisir en ligne toutes les informations relatives à vos données (les métadonnées), qui seront ensuite visibles sur le catalogue de données Rudi.\n\nLes données publiées sur votre noeud producteur ne seront pas transférées vers Rudi : lorsque des utilisateurs souhaiteront accéder à vos données, ils seront redirigés directement sur votre noeud producteur.\n\nSi vous n’avez pas encore accès à un noeud producteur, vous pouvez prendre contact avec l’animateur Rudi via le formulaire en ligne : formulaire.\n\nL’animateur vous recontactera le plus rapidement possible.\n\nDe la documentation est d’ores et déjà disponible à l’adresse suivante.\n"
      },
      {
        "title"    : "Données personnelles",
        "category" : "Noeud producteur",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/publication/donnee_personnelle/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publication\nSi vous êtes producteur de données et que vous traitez des données personnelles, Rudi peut vous simplifier le traitement des demandes RGPD faites par les citoyens.\n",
        "content"  : "Publication\nSi vous êtes producteur de données et que vous traitez des données personnelles, Rudi peut vous simplifier le traitement des demandes RGPD faites par les citoyens.\n\nLa première étape consiste à publier sur Rudi une description des données en question. Cela comprend notamment le contact de votre DPO ou la base légale utilisée pour recueillir les données personnelles. Les données elles-mêmes ne sont pas transférée.\n\nLes fonctionnalités liées aux données personnelles étant encore exploratoires, elles ne sont pas intégrées au noeud producteur. Pour en savoir plus, vous devez prendre contact avec l’animateur Rudi via le formulaire : formulaire.\n\nL’animateur vous recontactera le plus rapidement possible.\n"
      },
      {
        "title"    : "Données à accès restreint",
        "category" : "Noeud producteur",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/publication/donnee_restreint/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Publication de données en accès restreint\n",
        "content"  : "Publication de données en accès restreint\n\nDe la même manière que pour les jeux de données ouverts, la publication sur Rudi de données en accès restreint se fait via l’utilisation d’un noeud producteur.\n\nLors de la saisie des métadonnées concernant votre jeu de données, vous pourrez indiquer que vous souhaitez restreindre l’accès à ce jeu de données. Vous devrez alors indiquer quelles sont les conditions d’accès pour pouvoir accéder à ce jeu de données. Les données restreintes sont stockées chiffrées dans le noeud producteur. De plus amples informations sur le chiffrement des données sont définies dans les chapitres ci-dessous.\n\nSi vous n’avez pas encore accès à un noeud producteur, vous pouvez prendre contact avec l’animateur Rudi via le formulaire en ligne : formulaire.\n\nL’animateur vous recontactera le plus rapidement possible.\n\nChiffrement des données en accès restreint\n\nLes données en accès restreint sont stockées chiffrées sur le noeud producteur. Pour chaque média chiffré les connector_parameters suivants doivent être renseignés :\n\n\n  encrypted qui doit toujours être à true ;\n  public_key_url : l’URL de la clé publique utilisée ;\n  pub_key_cut : les premièrs caractères du contenu de la clé publique utilisée pour chiffrer (si le paramètre précédent n’est pas renseigné) ;\n  original_mime_type : le MIME type avant chiffrement du média ;\n  encrypted_mime_type : le MIME type après chiffrement du média.\n\n\nExemple de média :\n\n\t\"connector_parameters\": [\n\t\t{\n\t\t\t\"key\": \"encrypted\",\n\t\t\t\"value\": \"true\",\n\t\t\t\"type\": \"BOOLEAN\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"pub_key_cut\",\n\t\t\t\"value\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvS3nTZOj01kq1V6wKpMe\",\n\t\t\t\"type\": \"STRING\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"original_mime_type\",\n\t\t\t\"value\": \"image/jpeg\",\n\t\t\t\"type\": \"STRING\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"encrypted_mime_type\",\n\t\t\t\"value\": \"image/jpeg+crypt\",\n\t\t\t\"type\": \"STRING\"\n\t\t}\n\t]\n\n\nChiffrement à partir de la clé publique du portail\nElles peuvent être chiffrées à partir d’une clé publique exposée par le portail.\nCette clé est accessible via la requête :\ncurl -X GET \"https://rudi.bzh/konsult/v1/encryption-key\" -H  \"accept: application/octet-stream\"\n\n\nDans ce cas là, le déchiffrement des données se fait automatiquement par le portail lors d’un téléchargement. Cette étape est totalement transparente pour vous.\n\n\n\nChiffrement à partir d’une clé inconnue pour le portail\nLes données en accès restreint peuvent être chiffrées à partir d’une autre clé, qui n’est pas connue par le portail.\nDans ce cas, le portail Rudi ne peut pas déchiffrer la donnée. Les données que vous récupérez au moment du téléchargement seront alors chiffrées.\n"
      },
      {
        "title"    : "Fonctionnalités",
        "category" : "Noeud producteur",
        "tags"     : "",
        "url"      : "https://sigrennesmetropole.github.io/rudi_documentation/publication/noeud_producteur/",
        "date"     : "2024-10-16 07:36:35 +0000",
        "excerpt"  : "Fonctionnalités\nUn guide utilisateur présentant le noeud producteur est disponible en cliquant ici.\n",
        "content"  : "Fonctionnalités\nUn guide utilisateur présentant le noeud producteur est disponible en cliquant ici.\n\n\n"
      }]
